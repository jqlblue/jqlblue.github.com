<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: collect | Jqlblue's Blog]]></title>
  <link href="http://jqlblue.github.io/categories/collect/atom.xml" rel="self"/>
  <link href="http://jqlblue.github.io/"/>
  <updated>2015-08-24T23:03:40+08:00</updated>
  <id>http://jqlblue.github.io/</id>
  <author>
    <name><![CDATA[jqlblue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[互联网创业公司是否需要后端工程师]]></title>
    <link href="http://jqlblue.github.io/2015/03/30/does-startup-company-need-backend-development-engineer/"/>
    <updated>2015-03-30T18:05:00+08:00</updated>
    <id>http://jqlblue.github.io/2015/03/30/does-startup-company-need-backend-development-engineer</id>
    <content type="html"><![CDATA[<p>随着LeanCloud等<code>baas</code>云服务的兴起，对于一个互联网创业公司而言，是否还需要专门的后端工程师？</p>

<!-- more -->


<p>一个典型的web app的架构如下：</p>

<p>{% img /images/baas/app_struct.png web app典型架构 %}</p>

<p>客户端或者浏览器调用后端服务，进行数据的写入和读取。让用户通过互联网，完成信息的交换。</p>

<p>以一个b-s结构的web服务为例，其前后端基本架构大致如下：</p>

<p>{% img /images/baas/simple_web_struct.png web 服务的前后端基本架构 %}</p>

<p>前端主要负责用户界面的布局和交互处理，后端包括：</p>

<pre><code>1. 后端业务逻辑处理
2. 与前端用户界面进行相关交互
</code></pre>

<p>而一个要运行在生产环节下的后端服务架构，应该大致是下面这个样子：</p>

<p>{% img /images/baas/web_struct.png web web服务后端架构 %}</p>

<p>后端服务并不是直接对数据库进行写入和查询操作，每一次到达后端服务的请求，都附带着自身的业务逻辑。</p>

<p>虽然我们可以剥离某些与业务不是强关联的模块，增加一层公共服务。但是由于每个公司商业模式和运营需求的限制，业务逻辑的<code>领域</code>特性，会一直存在。</p>

<p>而现在的<code>baas</code>等服务，主要提供的是数据存储、实时消息、统计分析以及扩展组件等基础公共服务。有了这些服务，的确满足业务需求的情况下，降低后端服务的开发成本。</p>

<p>互联网的核心价值是：</p>

<pre><code>平等，共享，透明，高度化的信息对称
快速和善变，强烈的交互式客户体验
</code></pre>

<p><code>信息</code>（数据）和<code>交互体验</code>（前端ui）都很重要。</p>

<p>当然，随着<code>baas</code>服务的发展，对于业务逻辑不是很复杂的互联网应用，的确可以完全使用<code>baas</code>服务替代现有的后端服务。但是这样就会把后端逻辑变成一个黑盒。出了问题只能等待baas服务提供商解决。</p>

<p>对于创业公司而言，在选择类似的服务时，需要根据自身的业务形态和人员配备等，在前期的人员投入，后期的维护成本以及业务的最终形态，系统的扩展性，数据的安全性等方面，进行权衡。</p>

<p>而身处创业公司的后端工程师，也需要积极了解行业动态，如果使用<code>baas</code>服务能满足业务需求的，也就没有必要再去重复开发。</p>

<blockquote><p>baas（Backend as a Service）</p></blockquote>

<p>即软件即服务，如APICloud，LeanCloud。</p>

<blockquote><p>paas（Platform as a Service）</p></blockquote>

<p>即平台即服务，如google的gae，sina的sae。</p>

<blockquote><p>laas（Infrastructure as a Service）</p></blockquote>

<p>即基础设施即服务，如亚马逊的aws，阿里云，腾讯云，linode。</p>

<blockquote><p>saas（Software as a Service）</p></blockquote>

<p>即软件即服务，如云盘。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[那个套模版的，放开你的F5]]></title>
    <link href="http://jqlblue.github.io/2015/02/28/release-f5-for-template-engineer/"/>
    <updated>2015-02-28T18:29:00+08:00</updated>
    <id>http://jqlblue.github.io/2015/02/28/release-f5-for-template-engineer</id>
    <content type="html"><![CDATA[<p>老江说过：“科学技术是第一生产力”。技术的魅力在于通过改善相关流程或者提供相关工具，对人们的生活进行改善，make live esaier。</p>

<!-- more -->


<p><em>对于自喻为模版工程师的同行们，套模版的流程大抵是：</em></p>

<pre><code>写代码，保存

打开浏览器，按F5刷新页面，检查相关前端效果
</code></pre>

<p>我记得<a href="http://weibo.com/yjf10">轩脉刃</a>曾经写过一个统计鼠标按键的小工具。如果对模版工程师工作时键盘的按键进行统计，那么F5的使用率肯定不容忽视。</p>

<p>倘若能在代码保存后就自动刷新浏览器，那不仅能解放模版工程师的F5按键，也能提升他们的开发效率。突然感觉非常美妙。</p>

<p>我记得有人说过，这个世界上不缺乏原创的idea，缺的只是一双能发现它的眼睛。</p>

<p>正如<code>livereload</code>所说的－“The Web Developer Wonderland”。</p>

<p>使用<code>livereload</code>，<em>通过如下几个步骤</em>，就可以做到当我们保存代码后，自动刷新浏览器中相关页面内容。</p>

<blockquote><p>安装livereload浏览器扩展</p></blockquote>

<p>相关浏览器扩展的下载地址如下：</p>

<p><a href="http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions">browser extensions</a></p>

<blockquote><p>安装livereload server端</p></blockquote>

<p>安装python环境，然后在终端执行</p>

<pre><code>pip install livereload
</code></pre>

<p>或者</p>

<pre><code>easy_install livereload
</code></pre>

<blockquote><p>启动livereload server端</p></blockquote>

<p>假设我的代码目录在<code>/home/galendy/code/demo</code>，在终端执行</p>

<pre><code>livereload /home/galendy/code/demo
</code></pre>

<blockquote><p>点击浏览器扩展</p></blockquote>

<p><code>livereload</code>的基本原理是：</p>

<pre><code>livereload server端会启动本地的socket服务（默认开放本地的35729端口），当监听的目录下的文件内容有变化时，向该socket写入数据

livereload浏览器扩展会连接本地的35729端口，当有新消息到来时，会在浏览器中插入一段js代码，刷新当前页面
</code></pre>

<p>实际上，前端工程师还会使用<code>livereload</code>完成css，js等文件的合并和压缩。想要了解更多，请参考：</p>

<p><a href="http://livereload.com/">livereload</a></p>

<p><a href="http://livereload.readthedocs.org/en/latest/">python livereload</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[互联网信息分类方法]]></title>
    <link href="http://jqlblue.github.io/2015/01/25/categorize-web-information/"/>
    <updated>2015-01-25T19:12:00+08:00</updated>
    <id>http://jqlblue.github.io/2015/01/25/categorize-web-information</id>
    <content type="html"><![CDATA[<p>目前，虽然搜索已经代替分类目录（google颠覆yahoo模式）成为人们获取信息的主要途径，但是没有好的信息分类，再好的搜索也是白搭。只有信息足够格式化，标准化，搜索才有效。即分类提升展示逻辑，搜索输出内容结果。</p>

<!--more-->


<h1>如何判定分类的好坏</h1>

<p>一个好的分类方法需要做到如下几点：</p>

<ul>
<li>能够涵盖集合中的所有元素</li>
<li>类和类之间不能重叠</li>
<li>能够比较容易地为每一个元素找到其对应的分类</li>
</ul>


<h1>常见的分类方法</h1>

<h2>分类之前的准备工作</h2>

<p>在对信息进行分类之前，可以先做如下几件事：</p>

<h5>1. 明确如下问题</h5>

<p>信息如何产生？如何组织关联？通过什么渠道传播？</p>

<h5>2. 观察别人</h5>

<p>可以去一家真正的商店看看，或者参观一座图书馆，还可以拜访竞争对手的商店。</p>

<h5>3. 研究竞争对手</h5>

<p>访问竞争对手的网站。他们是怎样组织信息的？要对多种组织方案加以比较。存在哪些相似之外？又有哪些区别？要尽量明确竞争对手为什么做出那样的选择。这是失误还是明智之举？你甚至可以对他们的网站做可用性测试，从而发现其组织方案中哪些方面奏效，哪些部分没有意义。</p>

<h2>常见的分类方法</h2>

<h5>1. 主题分类法</h5>

<p>主题分类法的特征是选择某一个主题作为一阶类目，在一阶类目下又可分若干二阶类目，二阶类目下再分若干三阶类目，形成一个大的树形结构。同阶的类目按照字顺排序。</p>

<p>由于网络资源数不胜数，所以一般会选取14-24个热点事物作为一阶分类，分类的阶数为3到6级。</p>

<p>其优点是可以将事物相关的内容全部集中在一起。如汽车大类下可包含汽车制造，交易，保养，维修，赛车等等子类目。但是容量较小，对网络资源的覆盖率有限。</p>

<h5>2. 分面分类法</h5>

<p>分面分类法是根据实物都具有多维度的特征而建立的。可以将信息分成定义明确、互斥的区域。常见的是按字母顺序、按年表、按地理位置等分类。也可按照如下类型进行分类：</p>

<ul>
<li>按主题；设计时需要定义好内容的范围，注意涵盖面的广度</li>
<li>按任务；将内容和应用程序组织成流程、功能或工作的集合。最常见的是电商网站</li>
<li>按用户；如果用户群可以界定的比较清楚，可以提供很好的个性化服务，但模糊性依然存在，对系统“猜测”的要求很高</li>
<li>按隐喻；多用于游戏</li>
<li>混用以上类型</li>
</ul>


<h5>3. 卡片分类法</h5>

<p>卡片分类就是把类似的东西放在一起。</p>

<ul>
<li>把你收集的各种信息整理出来写在卡片上。(如果没有，可以用一堆CD或者照片代替，可以是任何东西，只要数量足够多，可以零乱散落在地板上)</li>
<li>把所有卡片从盒子里倒在地板上。</li>
<li>把所有卡片从盒子里倒在地板上。</li>
<li>现在开始分组。如果你看到某些东西与另外一些东西相像，就把它们放在一起。</li>
<li>最后，当分组完毕时，再拿一些背面有胶的便条标出每一个堆的名称，分类完毕。</li>
</ul>


<h5>4. 公众分类法</h5>

<p>所谓"公众分类法"，就是由公众来为信息贴加标签（tagging），被使用最多的标签就最能说明这条信息的特点。</p>

<p>使用标签分类，非常的便捷，而且易于组合，但是也存在一些问题：</p>

<ul>
<li>不同的用户对相同的标签，往往有不同的理解，比如在"工具"标签下，可能会发现彼此完全没有关系的内容。</li>
<li>同义词问题。用户可能使用同义词作为标签，比如"tv/television"，"Holland/Netherlands/Dutch"，"超级女生/超女"。英语中，还存在复数问题。</li>
<li>词的多义性问题。比如"china"这个标签，到底指中国，还是指瓷器。</li>
<li>用户的标签五花八门，可能会产生大量"噪音"，加重系统负担，降低分类的准确性。</li>
</ul>


<p>所以，最好的解决方法应该是，自上而下的目录分类法与标签式的公众分类法相结合，然后对能够用作标签的词汇进行控制（controlled vocabulary），不能什么词都用来当标签。</p>

<h1>实施建议</h1>

<ul>
<li>尝试按照主题分类和分面分类发进行分类</li>
<li>试试卡片分类</li>
<li>使用2的标准去判定分类是否合理</li>
<li>如果单纯的分类无法解决问题，考虑下打标签（公众分类法）</li>
</ul>


<p>reference：</p>

<p>[^1] <a href="http://zhanglichuan.me/resolve-ia">http://zhanglichuan.me/resolve-ia</a></p>

<p>[^2] <a href="http://www.ruanyifeng.com/blog/2007/01/categories.html">http://www.ruanyifeng.com/blog/2007/01/categories.html</a></p>

<p>[^3] <a href="http://www.uegeek.com/reading/web_ia_note">http://www.uegeek.com/reading/web_ia_note</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[电商相关概念整理]]></title>
    <link href="http://jqlblue.github.io/2014/09/22/e-commerce-idea-collection/"/>
    <updated>2014-09-22T10:24:00+08:00</updated>
    <id>http://jqlblue.github.io/2014/09/22/e-commerce-idea-collection</id>
    <content type="html"><![CDATA[<h2>电子商务模式</h2>

<p>电子商务模式是指企业运用互联网，通过基于一定技术基础的商务运作方式开展经营取得营业收入的基本方式。</p>

<!-- more -->


<p>主要可以分为以下四种类型：</p>

<ul>
<li>B2C（Business to Consumer），即企业与消费者之间的电子商务，如京东。</li>
<li>B2B（Business to Business），即企业与企业之间的电子商务，如阿里巴巴</li>
<li>C2C（Consumer to Consumer），即消费者与消费者之间的电子商务，如淘宝。</li>
<li>O2O（Online To Offline），即线下商务与互联网之间的电子商务，如美乐乐，其O2O模式具体表现为线上家具网与线下体验馆的双平台运营。</li>
</ul>


<p>C2C商务平台就是通过为买卖双方提供一个在线交易平台，使卖方可以主动提供商品上网拍卖，而买方可以自行选择商品进行竞价。</p>

<p>O2O模式下，线下服务就可以用线上来揽客，消费者可以用线上来筛选服务，还有成交可以在线结算，很快达到规模。该模式最重要的特点是：推广效果可查，每笔交易可跟踪</p>

<h2>电商网站解决方案</h2>

<p>电商网站中 C 端用户操作路径大致如下：</p>

<pre><code>商品浏览 -》 下单 -》支付 -》订单查看 -》退货
</code></pre>

<p>结合 B 端用户的操作，整套电商系统会涉及：</p>

<h3>前台系统</h3>

<ul>
<li>产品展示</li>
<li>个人中心（支付，订单，购物车，积分系统）</li>
<li>搜索，推荐</li>
<li>用户反馈交流（客服系统，社区）</li>
</ul>


<h3>运营管理后台</h3>

<ul>
<li>商品管理</li>
<li>商户管理</li>
<li>库存管理</li>
<li>支付管理</li>
<li>订单管理</li>
<li>配送物理管理</li>
<li>用户权限管理</li>
<li>数据统计分析</li>
<li>营销推广管理，如SEO，促销，广告</li>
<li>前台内容管理系统</li>
</ul>


<h3>基础服务</h3>

<ul>
<li>数据存储（日志，图片，商品信息）</li>
<li>监控报警</li>
<li>日志收集</li>
<li>消息系统</li>
<li>队列服务</li>
</ul>


<p>会员通过推荐，搜索，分类检索等功能，进行商品的浏览。通过浏览，会员将感兴趣的商品加入购物车，并进行支付处理。</p>

<p>会员在个人中心可以查看相关订单的处理状态，如：是否支付成功，是否配送等信息。对于不满意的商品，可以进行退换货处理。</p>

<p>在B 端的管理后台，有相关权限的管理员，可以进行商品管理，对订单进行处理。结合统计分析和营销推广，评出热销商品等等。</p>

<h3>可供参考的系统架构示例</h3>

<p>{% img /images/e-commerce/e_1.png 电商平台基础技术架构 %}
{% img /images/e-commerce/e_2.png 电商平台技术架构 %}</p>

<p>{% img /images/e-commerce/e_3.png 电商平台系统图 %}</p>

<h2>技术架构非功能性指标</h2>

<h3>1. 系统效率</h3>

<ul>
<li>空间换时间（多级缓存，静态化，索引）</li>
<li>并行与分布式计算（map-reduce，多线程，多进程）</li>
</ul>


<h3>2. 可扩展性</h3>

<ul>
<li>系统无状态</li>
<li>拆分（分库，分表（水平，垂直））</li>
</ul>


<h3>3. 安全性</h3>

<ul>
<li>数据存储安全，如增量，全量备份，异机备份。</li>
<li>数据传输安全，ssl/tls，加解密（对称，非对称）。</li>
<li>网络安全，数据库与外网隔离，确保不被恶意攻击</li>
<li>安全审计、操作日志记录。</li>
</ul>


<h3>4. 可用性</h3>

<ul>
<li>负载均衡（lvs，keepalived）</li>
<li>多写分离，主从切换，failover</li>
<li>应急预案和系统预警</li>
<li>系统降级（功能和品质）</li>
<li>系统限流（过载保护）</li>
</ul>


<h2>电商的特点</h2>

<h3>环境</h3>

<p>人们不受时间的限制，不受空间的限制，不受传统购物的诸多限制，可以随时随地在网上交易。通过跨越时间、空间，使我们在特定的时间里能够接触到更多的客户，为我们提供了更广阔的发展环境。</p>

<h3>市场</h3>

<p>在网上这个世界将会变得很小，一个商家可以面对全球的消费者，而一个消费者可以在全球的任何一家商家购物。一个商家可以去挑战不同地区、不同类别的买家客户群，在网上能够收集到丰富的买家信息，进行数据分析。</p>

<h3>优势</h3>

<p>电子商务减少了商品流通的中间环节，节省了大量的开支，从而也大大降低了商品流通和交易的成本。通过电子商务，企业能够更快的匹配买家，实现真正的产-供-销一体化，能够节约资源，减少不必要的生产浪费。</p>

<h3>劣势</h3>

<p>服务质量参差不齐。配送、安装、产品退换货、维修等客服环节需要完善。</p>

<h2>电商的本质</h2>

<p>电商首先重在“商”，而不在“电”。</p>

<p>这意味着电商还是企业经济学，电商还是要讲效益，讲利润，讲责任。但另一方面更重要，电商有自己的特点，它是信息化技术的重新架构，它成就的不仅仅是渠道，而是一种管理模式，甚至是一种战略规则，其未来基本形态或最高形态，不应是单纯的销售，而是点对点的服务，通过企业直接面对单个消费者，提供个性化的服务，从而开启企业发展的新时代。</p>

<h3>首先，电商应重新确立消费者地位</h3>

<p>消费者是品牌的上帝，但如何真正把这理念通过一定方法来实现，却一直没有找到更直接更完备的答案。信息化为这个问题带来了新曙光。通过电商窗口，消费者可进行自我颜色设计、款式设计以及搭配设计；在生产过程中，也可以进一步和消费者沟通；而这本身就是一个巨大的营销过程。消费者穿在身上的服装，绝不会再撞衫，它是独一的，代表着自己心境和思想的，是最受消费者欢迎的。</p>

<h3>其次，电商应重新塑造产业生态</h3>

<p>低价是不可持续的，企业必须有相对充足利润，并促进上下游乃至生态的良好发展。靠资本投资打价格战，一时可以，不可一世；靠截取供应商利润，一次可以，不可永续；一个电商靠价格战可以，但一个行业这样则不正常。笔者认为，通过企业点对点的服务，可以获得相对高的利润，这不仅可以加速电商本身的创新，更重要的是让上下游企业有良好的利润来源，一旦这样的生态链条生成，那么其竞争力则是巨大的、持续的、有良好的前景的。</p>

<h3>再次，电商应重新构建经济理论和品牌法则</h3>

<p>现在流行的经济理论和品牌法则，大多诞生在传统经济时代或信息化萌芽之时，均是那个时代的产物，更大程度上适应那个时代发展条件。比如，如果采用大众化定制，消费者会更广泛，类别更复杂，消费心理也会发生巨大变化，如果还一味墨守原来的定位法则，想必一定就刻舟求剑了。所以要在新时代里，一定要探寻定位的新内涵，寻找适合信息化时代的新方法，适合自己的新方法，通过不断创新实践，为丰富和扩展企业理论和品牌法则做出新尝试。</p>

<p>总之，电商本身就是一种创造，本质要求提升商业形态和价值，如果只是打价格战，那就是南辕北辙了。</p>

<h2>相关业务战略架构</h2>

<h3>1. 服务对象</h3>

<p>企业战略规划从选择客户开始。如1号店成立之初，服务对象是超市人群中的网络人群，所以去家乐福等的线下人群才是相关核心主攻人群，而非泛人群。</p>

<h3>2. 价值提供</h3>

<p>确定顾客定位后，就要解决为什么顾客要从你这里购买而非竞争对手处购买的价值定位。</p>

<p>1号店成立之初，从多种价值里最后选择了3个顾客价值：</p>

<ul>
<li><p>优惠价格</p></li>
<li><p>良好用户体验</p></li>
<li><p>未满足的品类需求（提供食品饮料，母婴这些当时竞争对手都不涉及的产品线）</p></li>
</ul>


<p>选择定位时，一定需要按照：</p>

<ul>
<li><p>竞争对手不足</p></li>
<li><p>能消费者需求</p></li>
<li><p>对相关领域比较擅长，有优势，自身能做好</p></li>
</ul>


<p>将这三者结合，产生一个清晰的价值定位，就可以以小博大。1号店启动时候只用了非常有限的资金，但假设一开始就博大，业务、资金、时间都分散，就没有今天了。</p>

<h3>3. 输出结果为产品、信息和服务</h3>

<p>产品线定位确定之后，就要进行了收缩。</p>

<p>1号店业务初期先保留了食品饮料、母婴、美容和家居四类，剔除了图书、服装等产品线，聘用了大量的兼职大学生协助产品经 理完善商品在网上的表现力，同时于刚董事长异常重视用户体验反馈，每天通过公司系统中消费者反馈第一时间解决来自各个部门的问题，这也是1号店能快速成长的一个重要原因，因为有效的企业更多是通过和终端顾客对话来解决企业内部的部门问题，而非公司高管自己拍脑袋决策。</p>

<h3>4. 资源资产能力</h3>

<p>表现为知识和权利领域。</p>

<p>1号店通过人力经理的辛苦搜索，找到了各部门的领导者，所以成立初期，很快网络了一批各行业的人才来推动业务发展。组织资本上，申请大量的技术专利，对1号店品牌商标保护等。关系资本上，1号店迅速和行业合作伙伴建立战略合作关系，虽然当时业务很小，但创始人用公司的美好发展愿景和优秀团队两个武器和各个合作伙伴建立了战略合作关系，比如从上海的物流合作商特能处取得了行业最低的每单配送价格。</p>

<h3>5. 流程</h3>

<p>就是解决系统层面做什么。</p>

<p>1号店当时IT人员数量是各部门之最，开发了很多系统，管理上也是制度系统比人重要，各部门周二的KPI会议上负责人都用部门量化的KPI业绩来沟通业务的机会和挑战以及改进方案。这几年来，虽然1号店人员流失率颇高，但业务还是持续增长，这也是创始人对系统的重视是一个重要原因。</p>

<h3>6. 合作伙伴</h3>

<p>合作伙伴分为纵向和横向合作伙伴。</p>

<p>为业务直接带来业绩的为上下游的合作伙伴，上游供应商有宝洁等货品供应商，下游有平安客流伙伴，特能是物流伙伴，普洛斯园区则提供良好的仓储伙伴。</p>

<p>目前沃尔玛入股1号店，应该可以从很多方面提供1号店的运营能力。而横向合作伙伴，定义为可以帮助公司间接提高产品服务价值和维系良好客户关系的供应商，比如听说1号店2012年起聘专业的客户关系维系公司来帮助提升客户关系管理等措施就是良好运用横向伙伴技巧。不和风投随意洽谈，从一开始就找能给自己真正带来业务提升的战略投资者。</p>

<h3>7. 获利模式</h3>

<p>目前电商越大越亏损，因为还在圈地时期。一个不注重盈利也解释不清楚未来盈利模式都是违背商业本质。而真正好的利润是持续长久的，不是圈钱短视，否则必有后患，好的利润模式也不是眼球经济，而应可持续发展。</p>

<h3>8. 收入增长方式</h3>

<p>收入增长模式可以分为客户轴，产品轴和位置轴。</p>

<p>客户轴可以供应给个人消费者的有形产品外，1号店还提供了手机充值等无形服务产品来增加客户粘性，当然成立之初就实施的针对企业的团购也给1号店带来了一 定比例的收入。</p>

<p>产品轴是随着公司发展逐渐增加，各平台电商公司虽然都是从不同产品线起家，但最后基本会殊途同归，品类扩充是必由之路，但必须有节奏感和清晰的定位分析，否则会出现凡客去年的产品扩充问题。</p>

<p>最后是位置轴，全国布局一定是逐步实现，是规模做大的桥头堡，但需要资本背后支持。</p>

<p>reference：</p>

<p>[^1] <a href="http://mp.weixin.qq.com/s?__biz=MzA4ODI4NjMwMQ==&amp;mid=10000072&amp;idx=2&amp;sn=89dbb533dd9bfd0f0900fc2ad2504e6c&amp;3rd=MzA3MDU4NTYzMw==&amp;scene=6#rd">电子商务不得不了解的模式</a></p>

<p>[^2] <a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MjM5MzY2NTEyMw==&amp;appmsgid=10013152&amp;itemidx=1&amp;sign=6fa1962f942a1804368e3e22c393c934&amp;3rd=MzA3MDU4NTYzMw==&amp;scene=6#wechat_redirect">电商的本质</a></p>

<p>[^3] <a href="http://mp.weixin.qq.com/s?__biz=MzA4MTcxNzgzMQ==&amp;mid=200319772&amp;idx=5&amp;sn=d8e44444b80d633dbc56f5ee6ab5de5a&amp;3rd=MzA3MDU4NTYzMw==&amp;scene=6#rd">以1号店为例，解析企业电子商务8步业务战略架构</a></p>

<p>[^4] <a href="http://mp.weixin.qq.com/s?__biz=MjM5MjEwMTk1OQ==&amp;mid=200031802&amp;idx=1&amp;sn=fec76ef0b002c7d41c91d746a07ee0c9&amp;3rd=MzA3MDU4NTYzMw==&amp;scene=6#rd">电子商务模式下如何进行客户关系管理</a></p>

<p>[^5] <a href="http://blog.csdn.net/yangbutao/article/details/12242441">构建高并发高可用的电商平台架构实践</a></p>
]]></content>
  </entry>
  
</feed>
